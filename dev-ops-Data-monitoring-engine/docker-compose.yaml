version: '3.8'
services:
  rabbit1:
    image: rabbitmq:3.11-management
    hostname: rabbit1
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      # Shared Erlang cookie for authentication
      RABBITMQ_ERLANG_COOKIE: 'MY_SECRET_COOKIE'
      # Point RabbitMQ to our custom config file
      RABBITMQ_CONFIG_FILE: '/etc/rabbitmq/rabbitmq.conf'
    volumes:
      # Mount the config from the rabbitmq/ directory
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    ports:
      - '5673:5672'   # AMQP
      - '15673:15672' # HTTP management UI
      - '15693:15692' # Prometheus metrics
    networks:
      - monitoring_net

  rabbit2:
    image: rabbitmq:3.11-management
    hostname: rabbit2
    depends_on:
      - rabbit1
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_ERLANG_COOKIE: 'MY_SECRET_COOKIE'
      RABBITMQ_CONFIG_FILE: '/etc/rabbitmq/rabbitmq.conf'
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - monitoring_net

  rabbit3:
    image: rabbitmq:3.11-management
    hostname: rabbit3
    depends_on:
      - rabbit1
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_ERLANG_COOKIE: 'MY_SECRET_COOKIE'
      RABBITMQ_CONFIG_FILE: '/etc/rabbitmq/rabbitmq.conf'
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - monitoring_net

#  haproxy:
#    image: haproxy:2.4
#    volumes:
#      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
#    ports:
#      - '5673:5672'   # AMQP
#      - '15673:15672' # HTTP management UI
#      - "9000:9000"

  nodered:
    image: nodered/node-red:latest
    ports:
      - '1880:1880'
    volumes:
      - ./nodered-flows:/data
    networks:
      - monitoring_net
    depends_on:
      - rabbit1

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      - rabbit1
      - rabbit2
      - rabbit3
    ports:
      - "9091:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./prometheus/recording_rules.yml:/etc/prometheus/recording_rules.yml"
    networks:
      - monitoring_net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - '3001:3000'
    environment:
        GF_SECURITY_ADMIN_USER: admin
        GF_SECURITY_ADMIN_PASSWORD: admin
        GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      # Persist Grafanaâ€™s database, plugins, and dashboards
      - grafana-data:/var/lib/grafana
      # Auto-provision Prometheus as a data source
      - ./provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      # Auto-provision custom dashboards
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      # Store any JSON dashboard files for manual import
      - ./dashboards:/var/lib/grafana/dashboards:ro
    restart: unless-stopped
    networks:
      - monitoring_net

volumes:
  grafana-data:

networks:
  monitoring_net:
    driver: bridge